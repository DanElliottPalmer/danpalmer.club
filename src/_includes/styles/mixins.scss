@mixin apply-color-variables($map, $keys: []) {
  @each $key, $value in $map {
    $next-keys: append($keys, $key);
    @if type-of($value) == "map" {
      @include apply-color-variables($value, $next-keys);
    } @else if not is-falsey($value) {
      --color-#{list-join($next-keys, '-')}: var(--color-def-#{$value});
    }
  }
}

@mixin apply-palette-color-variables($map, $palette, $keys: []) {
  @each $key, $value in $map {
    $next-keys: append($keys, $key);
    @if type-of($value) == "map" {
      @include apply-palette-color-variables($value, $palette, $next-keys);
    } @else if not is-falsey($value) {
      --color-#{list-join($next-keys, '-')}: var(
        --color-#{$palette}-#{list-join($next-keys, "-")}
      );
    }
  }
}

@mixin apply-css-variables {
  // Spacing
  --spacing-dense: #{to-rems(map-get($spacing, "dense"))};
  --spacing-standard: #{to-rems(map-get($spacing, "standard"))};
  --spacing-sparse: #{to-rems(map-get($spacing, "sparse"))};
  --spacing: var(--spacing-standard);

  // Color definitions
  $color-definitions: map-get($colors, "definitions");
  @each $color-name, $color-value in $color-definitions {
    --color-def-#{$color-name}: #{$color-value};
  }

  // Color palettes
  @include apply-color-variables(map-get($colors, "palettes"));
  @include apply-palette-color-variables(
    map-get(map-get($colors, "palettes"), "light"),
    "light"
  );
  @media (prefers-color-scheme: dark) {
    @include apply-palette-color-variables(
      map-get(map-get($colors, "palettes"), "light"),
      "dark"
    );
  }

  // Typography
  $type-definitions: map-get($typography, "definitions");
  @each $type-name, $type-values in $type-definitions {
    @each $type-key, $type-value in $type-values {
      --type-def-#{$type-name}-#{$type-key}: #{$type-value};
    }
  }

  // Typography sizes
  $type-sizes: map-get($typography, "sizes");
  @each $font-key, $font-value in $type-sizes {
    --type-size-#{$font-key}: #{to-rems($font-value)};
  }
}

@mixin apply-type-styles($type-token) {
  $token-value: get-type-token-value($type-token);
  font-family: var(--type-def-#{$token-value}-family);
  line-height: var(--type-def-#{$token-value}-line-height);
}
